version: "3.9"
services:
  redis:
    container_name: local_redis
    image: redis:5.0 # 指定的 docker 镜像
    ports:
      - "6379:6379"
    networks:
      - hicrm_docker
    restart: always
    volumes:
      - "${SERVER_PATH}/redis/redis.conf:/usr/local/etc/redis/redis.conf"
      - "${SERVER_PATH}/redis/log:/var/log/redis"
      - "${SERVER_PATH}/redis/data:/data/log/redis"
    #command: redis-server /usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=2048
    tty: true # 不自动停止容器

  nginx:
    container_name: local_nginx
    image: silentcxl/nginx:v1
    #build:
    #  context: ${SERVER_IMAGES_BASH}/nginx
    ports:
      - "80:80"  # localhost
      - "8001:8001" # 变现后台
      - "8002:8002" # wp
      - "8003:8003"
      - "8004:8004" # 开发者后台
      - "8005:8005"
      - "8006:8006" # hidata
      - "8007:8007"
      - "8008:8008"
      - "8009:8009"
      - "8010:8010"
      - "8081:8081"
      - "8097:8097"
      - "8098:8098"
    networks:
      - hicrm_docker
    tty: true
    volumes:
      - "${SERVER_PATH}/nginx/conf:/etc/nginx/conf.d" # 映射所有配置文件
      - "${WEB_PATH}:/usr/share/nginx/html"
      - "${SERVER_PATH}/nginx/log:/var/log/nginx"
    restart: always
  
  php70:
    container_name: local_php70 # 容器名称，后期请不要使用版本信息作为
    #build:
    #  context: ${SERVER_IMAGES_BASH}/php/7.0
    image: silentcxl/phpyaf70:v1 # 自建镜像，通过 Dockerfile 构建，安装 yaf 扩展
    networks:
      - hicrm_docker
    ports:
      - "7000:9000"
    restart: always
    tty: true
    volumes:
      - "${WEB_PATH}:/var/www/html"
      - "${SERVER_PATH}/php/7.0/php.ini:/usr/local/etc/php/php.ini"
      #- "${SERVER_PATH}/php/7.0/www.conf:/usr/local/etc/php-fpm.d/www.conf"

  python:
    container_name: local_python39
    image: www_python:latest
    #build:
      #context: ${PROJECT_IMAGES_BASH}/hidata
    networks:
      - hicrm_docker
    ports:
      - "40000:50000"
    restart: always
    depends_on:
      - mysql
    tty: true
    volumes:
      - "${WEB_PATH}/hidata:/app/hidata"
    #command:
      #- "uwsgi --ini /app/hidata/serve/resources/uwsgi/uwsgi.dev.ini"

  mysql:
    container_name: local_mysql
    image: silentcxl/mysql_57:v1
    #build:
    #  context: ${SERVER_IMAGES_BASH}/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - "3306:3306"
    networks:
      - hicrm_docker
    tty: true
    volumes:
      - "${SERVER_PATH}/mysql/my.cnf:/etc/mysql/conf.d/my.cnf"
      - "${SERVER_PATH}/mysql/data:/var/lib/mysql"
    restart: always
    #command:
      #- "mysqld --privileged=true --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"

  #etcd:
  #  image: "k8s.gcr.io/etcd:3.4.13-0"
  #  container_name: local_etcd
  #  ports:
  #    - "23800:2380"
  #    - "23790:2379"
  #  environment:
  #    - ALLOW_NONE_AUTHENTICATION=yes
  #    - ETCD_NAME=local_etcd
  #    - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
  #    - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
  #    - ETCD_ADVERTISE_CLIENT_URLS=http://192.168.120.61:23790
  #    - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://local_etcd:2380
  #    #- ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
  #    #- ETCD_INITIAL_CLUSTER=etcd0=http://etcd0:2380,etcd1=http://etcd1:2380,etcd2=http://etcd2:2380
  #    #- ETCD_INITIAL_CLUSTER_STATE=new
  #  command:
  #    - "/usr/local/bin/etcd"

  jenkins:
    image: 'jenkins/jenkins:lts'
    container_name: jenkins
    restart: always
    environment:
      - TZ=Asia/Shanghai
    user: root
    ports:
      - '8989:8080'
      - '50000:50000'
    volumes:
      - '${SERVER_PATH}/jenkins:/var/jenkins_home'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/usr/bin/docker:/usr/bin/docker'
      - '${SERVER_PATH}/jenkins/port.sh:/root/port.sh'
networks:
  hicrm_docker:
